{"ast":null,"code":"var _jsxFileName = \"C:\\\\D\\\\UNH\\\\Portfolio\\\\src\\\\components\\\\Leadership.jsx\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LeadershipCard = ({\n  role,\n  organization,\n  period,\n  achievements\n}) => /*#__PURE__*/_jsxDEV(\"div\", {\n  className: \"border border-[#ABB2BF] p-6 hover:border-[#C778DD] transition-colors\",\n  children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n    className: \"text-xl font-bold mb-2\",\n    children: role\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n    className: \"text-[#C778DD] mb-2\",\n    children: organization\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n    className: \"text-[#ABB2BF] text-sm mb-4\",\n    children: period\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n    className: \"space-y-2\",\n    children: achievements.map((achievement, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n      className: \"flex items-start gap-2 text-[#ABB2BF]\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"text-[#C778DD]\",\n        children: \"\\u2022\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: achievement\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 11\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 5,\n  columnNumber: 3\n}, this);\n_c = LeadershipCard;\nLeadershipCard.propTypes = {\n  role: PropTypes.string.isRequired,\n  organization: PropTypes.string.isRequired,\n  period: PropTypes.string.isRequired,\n  achievements: PropTypes.arrayOf(PropTypes.string).isRequired\n};\nconst Leadership = () => {\n  const experiences = [{\n    role: \"Tech Community Leader\",\n    organization: \"Local Developer Community\",\n    period: \"2023 - Present\",\n    achievements: [\"Organized monthly tech meetups with 100+ attendees\", \"Mentored 20+ junior developers\", \"Facilitated workshops on modern web technologies\", \"Built partnerships with local tech companies\"]\n  }, {\n    role: \"Project Team Lead\",\n    organization: \"Open Source Project\",\n    period: \"2022 - 2023\",\n    achievements: [\"Led a team of 5 developers\", \"Implemented agile development practices\", \"Increased project contributors by 150%\", \"Improved documentation and onboarding process\"]\n  }, {\n    role: \"Hackathon Organizer\",\n    organization: \"University Tech Club\",\n    period: \"2021 - 2022\",\n    achievements: [\"Coordinated 3 successful hackathons\", \"Managed budget and sponsorships\", \"Created inclusive environment for participants\", \"Facilitated judging and awards process\"]\n  }];\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    id: \"leadership\",\n    className: \"py-20 px-4 md:px-8\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"max-w-6xl mx-auto\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-3xl font-bold mb-8\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-[#C778DD]\",\n          children: \"#\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this), \"leadership\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid md:grid-cols-2 lg:grid-cols-3 gap-8\",\n        children: experiences.map((exp, index) => /*#__PURE__*/_jsxDEV(LeadershipCard, {\n          ...exp\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n};\n_c2 = Leadership;\nexport default Leadership;\nvar _c, _c2;\n$RefreshReg$(_c, \"LeadershipCard\");\n$RefreshReg$(_c2, \"Leadership\");","map":{"version":3,"names":["React","PropTypes","jsxDEV","_jsxDEV","LeadershipCard","role","organization","period","achievements","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","achievement","index","_c","propTypes","string","isRequired","arrayOf","Leadership","experiences","id","exp","_c2","$RefreshReg$"],"sources":["C:/D/UNH/Portfolio/src/components/Leadership.jsx"],"sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst LeadershipCard = ({ role, organization, period, achievements }) => (\r\n  <div className=\"border border-[#ABB2BF] p-6 hover:border-[#C778DD] transition-colors\">\r\n    <h3 className=\"text-xl font-bold mb-2\">{role}</h3>\r\n    <p className=\"text-[#C778DD] mb-2\">{organization}</p>\r\n    <p className=\"text-[#ABB2BF] text-sm mb-4\">{period}</p>\r\n    <ul className=\"space-y-2\">\r\n      {achievements.map((achievement, index) => (\r\n        <li key={index} className=\"flex items-start gap-2 text-[#ABB2BF]\">\r\n          <span className=\"text-[#C778DD]\">â€¢</span>\r\n          <span>{achievement}</span>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  </div>\r\n);\r\n\r\nLeadershipCard.propTypes = {\r\n  role: PropTypes.string.isRequired,\r\n  organization: PropTypes.string.isRequired,\r\n  period: PropTypes.string.isRequired,\r\n  achievements: PropTypes.arrayOf(PropTypes.string).isRequired,\r\n};\r\n\r\nconst Leadership = () => {\r\n  const experiences = [\r\n    {\r\n      role: \"Tech Community Leader\",\r\n      organization: \"Local Developer Community\",\r\n      period: \"2023 - Present\",\r\n      achievements: [\r\n        \"Organized monthly tech meetups with 100+ attendees\",\r\n        \"Mentored 20+ junior developers\",\r\n        \"Facilitated workshops on modern web technologies\",\r\n        \"Built partnerships with local tech companies\"\r\n      ]\r\n    },\r\n    {\r\n      role: \"Project Team Lead\",\r\n      organization: \"Open Source Project\",\r\n      period: \"2022 - 2023\",\r\n      achievements: [\r\n        \"Led a team of 5 developers\",\r\n        \"Implemented agile development practices\",\r\n        \"Increased project contributors by 150%\",\r\n        \"Improved documentation and onboarding process\"\r\n      ]\r\n    },\r\n    {\r\n      role: \"Hackathon Organizer\",\r\n      organization: \"University Tech Club\",\r\n      period: \"2021 - 2022\",\r\n      achievements: [\r\n        \"Coordinated 3 successful hackathons\",\r\n        \"Managed budget and sponsorships\",\r\n        \"Created inclusive environment for participants\",\r\n        \"Facilitated judging and awards process\"\r\n      ]\r\n    }\r\n  ];\r\n\r\n  return (\r\n    <section id=\"leadership\" className=\"py-20 px-4 md:px-8\">\r\n      <div className=\"max-w-6xl mx-auto\">\r\n        <h2 className=\"text-3xl font-bold mb-8\">\r\n          <span className=\"text-[#C778DD]\">#</span>leadership\r\n        </h2>\r\n        <div className=\"grid md:grid-cols-2 lg:grid-cols-3 gap-8\">\r\n          {experiences.map((exp, index) => (\r\n            <LeadershipCard key={index} {...exp} />\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Leadership; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}